@model StudyLink.Domain.Entities.Question

@{
    ViewData["Title"] = "Add Question";
}

<h2>Add Question</h2>

<form asp-area="Teacher" asp-action="Create" method="post" id="form-container">
    <div id="form"></div>
    <div id="choicesFields"></div>
</form>

@section Scripts {
    <script>
        let choices = [
            { id: "A", text: "" },
            { id: "B", text: "" },
            { id: "C", text: "" },
            { id: "D", text: "" }
        ];

        $("#form").dxForm({
            labelLocation: "top",
            showColonAfterLabel: false,
            formData: {
                QuestionText: "",
                CorrectAnswer: "",
                Choices: choices // Directly initialize Choices here
            },
            items: [
                {
                    itemType: "group",
                    caption: "Question Information",
                    colCount: 2,
                    items: [
                        { dataField: "questionText",editorType: "dxTextArea", isRequired: true, height: 150},
                        { dataField: "marks", editorType: "dxNumberBox", editorOptions: {  min: 1,  max: 5,  value: 1 }, isRequired: true }
                    ]
                },
                {
                    itemType: "group",
                    caption: "Choices",
                    colCount: 2,
                    items: choices.map((choice, index) => ({
                        dataField: `Choices[${index}].ChoiceText`, // Use indexed binding for choices
                        editorType: "dxTextBox",
                        label: { text: `Choice ${choice.id}` },
                        isRequired: true
                    }))
                },
                {
                    dataField: "CorrectAnswer",
                    editorType: "dxRadioGroup",
                    editorOptions: {
                        items: choices.map(choice => ({ id: choice.id, text: `Choice ${choice.id}` })),
                        valueExpr: "id",
                        displayExpr: "text",
                        layout: "horizontal"
                    },
                    label: { text: "Correct Answer" },
                    isRequired: true
                },
                {
                    itemType: "button",
                    horizontalAlignment: "center",
                    buttonOptions: {
                        text: "Submit",
                        useSubmitBehavior: true,
                        onClick: function () {
                                    let choicesData = [];
                                            choices.forEach((choice, index) => {
                                                let choiceText = $("#form").find(`input[name="Choices[${index}].ChoiceText"]`).val();
                                                let isCorrect = $("#form").dxForm("instance").option("formData").CorrectAnswer === choice.id;

                                                choicesData.push({
                                                    ChoiceText: choiceText,
                                                    IsCorrect: isCorrect
                                                });
                                            });

                                            $("#choicesFields").empty();
                                            choicesData.forEach((choice, index) => {
                                                $("#choicesFields").append(`<input type="hidden" name="Choices[${index}].ChoiceText" value="${choice.ChoiceText}" />`);
                                                $("#choicesFields").append(`<input type="hidden" name="Choices[${index}].IsCorrect" value="${choice.IsCorrect}" />`);
                                            });


                            if ($("#form").dxForm("instance").validate().isValid) {
                                $("#form-container").submit();
                            }
                        }
                    }
                }
            ]
        });
    </script>
}
