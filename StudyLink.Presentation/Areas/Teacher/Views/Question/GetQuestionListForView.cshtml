@model IEnumerable<StudyLink.Domain.Entities.Question>

@{
    ViewData["Title"] = "Question List";
}

<h2 class="mb-4">Question List</h2>
<a asp-action="QuestionTypes" asp-route-subjectId="@Model.FirstOrDefault()?.SubjectId" class="btn btn-secondary mt-3">Back</a>

@if (Model != null && Model.Any())
{
    <div class="list-group">
        @foreach (var question in Model.Select((q, index) => new { Question = q, Index = index + 1 }))
        {
            <div class="mb-4 p-3 border rounded">
                <h5>
                    Question @question.Index: @question.Question.QuestionText
                    @if (question.Question.Marks > 0)
                    {
                        <span class="text-muted float-end">(Marks: @question.Question.Marks)</span>
                    }
                </h5>

                <div class="row mt-2">
                    @foreach (var choice in question.Question.Choices.Select((c, i) => new { Choice = c, Index = i }))
                    {
                        var label = GetChoiceLabel(choice.Index);
                        var cssClass = choice.Choice.IsCorrect ? "list-group-item-success font-weight-bold" : "";
                        <div class="col-md-6 mb-2">
                            <div class="list-group-item @cssClass">
                                <strong>@label</strong>: @choice.Choice.ChoiceText
                                @if (choice.Choice.IsCorrect)
                                {
                                    <span class="badge bg-success ms-2">Correct</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No questions found.</p>
}

@functions {
    public string GetChoiceLabel(int index)
    {
        return ((char)('A' + index)).ToString(); // Dynamically returns A, B, C, D, etc.
    }
}
