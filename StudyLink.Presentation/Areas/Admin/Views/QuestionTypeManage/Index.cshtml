@model IEnumerable<StudyLink.Domain.Entities.QuestionType>

@{
    ViewData["Title"] = "Question Types";
}

<h2>QuestionType List</h2>

<div id="questionTypeDataGrid" class="table-responsive table-bordered table-striped table-hover"></div>

<div id="deletePopup" class="dx-popup" style="display:none;">
    <div class="dx-popup-content">
        <p>Are you sure you want to delete this questionType?</p>
        <form id="deleteForm" method="post" asp-area="Admin" asp-area="QuestionTypeManage" asp-action="Delete">
            <input type="hidden" id="QuestionTypeId" name="QuestionTypeId" />
            <div class="dx-popup-buttons">
                <button type="submit" id="confirmDeleteBtn" class="dx-button">Yes</button>
                <button type="button" id="cancelDeleteBtn" class="dx-button">Cancel</button>
            </div>
        </form>
    </div>
</div>

<div id="detailsPopup" class="dx-popup" style="display:none;">
    <div class="dx-popup-content">
        <h4 id="popupTitle"></h4>
        <div id="subjectList"></div> 
        @* <div class="dx-popup-buttons">
            <button type="button" id="closePopupBtn" class="dx-button">Close</button>
        </div> *@
    </div>
</div>


@section Scripts {
    <script>
        var questionTypes = @Html.Raw(Json.Serialize(Model));

        var deletePopup = $("#deletePopup").dxPopup({
            title: "Delete Confirmation",
            visible: false,
            dragEnabled: true,
            closeOnOutsideClick: true,
            width: 315,
            height: 210
        }).dxPopup("instance");

        var detailsPopup = $("#detailsPopup").dxPopup({
            title: "Question Type Details",
            visible: false,
            dragEnabled: true,
            closeOnOutsideClick: true,
            width: 800,
            height: "auto"
        }).dxPopup("instance");

        // $(document).on("click", "#closePopupBtn", function () {
        //     detailsPopup.hide();
        // });

        $("#questionTypeDataGrid").dxDataGrid({
                dataSource: questionTypes,
        keyExpr: "questionTypeId",
        showBorders: true,
        rowDragging: {
            allowReordering: true,
            onReorder: function (e) {
                var visibleRows = e.component.getVisibleRows();
                var newData = [];

                visibleRows.forEach((row, index) => {
                    row.data.sortOrder = index + 1; 
                    newData.push(row.data);
                });

                e.component.option("dataSource", newData); 
                e.component.refresh(); 

                $.ajax({
                    url: '@Url.Action("UpdateOrder", "QuestionTypeManage", new { area = "Admin" })',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(newData),
                    success: function (data) {
                        if (data.success) {
                             window.location.reload();
                            toastr.success(data.message);
                        } else {
                            toastr.error(data.message);
                        }
                    }
                });
            }
        },
            columns: [
                {
                    dataField: "typeName",
                    caption: "Type Name",
                     alignment: "left"
                },
                                {
                    dataField: "fullMarks",
                    caption: "Full Marks",
                     alignment: "left"
                },
                                {
                    dataField: "passMarks",
                    caption: "Pass Marks",
                     alignment: "left"
                },
                // {
                //     dataField: "isPublished",
                //     caption: "Publish",
                //     cellTemplate: function (container, options) {
                //         var switchControl = $("<div>")
                //             .dxSwitch({
                //                 value: options.value,
                //                 onValueChanged: function (e) {
                //                     $.ajax({
                //                         url: '@Url.Action("TogglePublishStatus", "QuestionTypeManage", new { area = "Admin" })',
                //                         type: 'POST',
                //                         contentType: 'application/json',
                //                         data: JSON.stringify({
                //                             questionTypeId: options.row.data.questionTypeId,
                //                             isPublished: e.value
                //                         }),
                //                         success: function (data) {
                //                             if (data.success) {
                //                                 toastr.success(data.message); 
                //                             } else {
                //                                 switchControl.dxSwitch("instance").option("value", options.value);
                //                                 toastr.error(data.message);
                //                             }
                //                         }
                //                     });
                //                 }
                //             }).appendTo(container);
                //     }
                // },
                {
                    caption: "Actions",
                    type: "buttons",
                    buttons: [
                        {
                            icon: "bi bi-toggles",
                                onClick: function (e) {
                                var questionTypeId = e.row.data.questionTypeId;

                                $.ajax({
                                    url: '@Url.Action("GetQuestionTypeDetails", "QuestionTypeManage", new { area = "Admin" })',
                                    type: 'GET',
                                    data: { questionTypeId: questionTypeId },
                                    success: function (response) {
                                        if (response.success) {
                                            detailsPopup.show();
                                            $("#subjectList").dxDataGrid({
                                                dataSource: response.data,
                                                columns: [
                                                    {
                                                        dataField: "subject.subjectName",  
                                                        caption: "Subject Name",
                                                        alignment: "left"
                                                    },
                                                    {
                                                        dataField: "isPublished", 
                                                        caption: "Published",
                                                        alignment: "center",
                                                        cellTemplate: function (container, options) {
                                                            var switchControl = $("<div>")
                                                            .dxSwitch({
                                                                value: options.value,
                                                                onValueChanged: function (e) {
                                                                    $.ajax({
                                                                        url: '@Url.Action("TogglePublishStatus", "QuestionTypeManage", new { area = "Admin" })',
                                                                        type: 'POST',
                                                                        contentType: 'application/json',
                                                                        data: JSON.stringify({
                                                                            questionTypeId: options.row.data.questionTypeId,
                                                                            subjectId: options.row.data.subjectId,
                                                                            isPublished: e.value
                                                                        }),
                                                                        success: function (data) {
                                                                            if (data.success) {
                                                                                toastr.success(data.message);
                                                                            } else {
                                                                                switchControl.dxSwitch("instance").option("value", options.value);
                                                                                toastr.error(data.message);
                                                                            }
                                                                        }
                                                                    });
                                                                }
                                                            }).appendTo(container);
                                                        }
                                                    }
                                                ],
                                                paging: { enabled: false },
                                                sorting: { mode: "multiple" },
                                                height: "auto"
                                            });

                           
                                        } else {
                                            toastr.error("Failed to load details.");
                                        }
                                    },
                                    error: function () {
                                        toastr.error("Error fetching data.");
                                    }
                                });
                            },
                            cssClass: "fs-6 text-success mx-1"
                        },

                        {
                            icon: "bi bi-pencil",
                            onClick: function (e) {
                                var questionTypeId = e.row.data.questionTypeId;
                                window.location.href = '@Url.Action("Edit", "QuestionTypeManage", new { area = "Admin" })/' + questionTypeId;
                            },
                            cssClass: "fs-6 text-success mx-1"
                        },
                        {
                            icon: "bi bi-trash",
                            onClick: function (e) {
                                deletePopup.show();
                                $("#QuestionTypeId").val(e.row.data.questionTypeId);
                            },
                            cssClass: "fs-6 text-danger mx-1"
                        }
                    ]
                }
            ],
            paging: { pageSize: 5 },
            pager: {
                visible: true,
                showPageSizeSelector: true,
                allowedPageSizes: [5, 10, 15],
                showNavigationButtons: true,
                displayMode: "compact"
            },
                       toolbar: {
                items: [
                    {
                        widget: "dxButton",
                        options: {
                            text: "Add Type",
                            icon: "bi bi-plus-circle",
                            elementAttr: {
                               style: "background-color: #007bff !important; color: white;"
                            },
                            iconCssClass: "text-white",
                            onClick: function () {
                                window.location.href = '@Url.Action("Create", "QuestionTypeManage", new { area = "Admin" })';
                            }
                        },
                        location: "before"
                    },
                    {
                        name: "searchPanel",
                        location: "after"
                    }
                ]
            },
            searchPanel: {
                visible: true,
                width: 200,
                placeholder: "Search..."
            },
            filterRow: {
                visible: false
            },
            onContentReady: function () {
                $(".dx-gridbase-a11y-status-container").hide();
            }
        });

        $(document).on("click", "#cancelDeleteBtn", function () {
            deletePopup.hide();
        });
    </script>
}
