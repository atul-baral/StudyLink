<style>
    #resultPopup .badge {
        font-size: 0.8rem;
    }
</style>

<div id="resultPopup" style="display: none;">
    <div id="resultContentWrapper" style="max-height: 80vh; overflow-y: auto;">
        <div id="resultContent"></div>
    </div>
</div>

<script>
    function loadResultContent(studentId, questionTypeId, url) {
        $.ajax({
            url: url,
            type: "GET",
            data: { studentId: studentId, questionTypeId: questionTypeId },
            dataType: "json",
            success: function (response) {
                if (response && response.success && Array.isArray(response.data)) {
                    let htmlContent = buildResultHtml(response.data);
                    showResultPopup(htmlContent);
                } else {
                    console.error("Data is missing or not an array:", response);
                    alert("Failed to load result data.");
                }
            },
            error: function (xhr, status, error) {
                console.error("AJAX Error:", status, error);
                console.error("Response Text:", xhr.responseText);
            }
        });
    }

    function buildResultHtml(data) {
        let htmlContent = "";

        data.forEach((question, qIndex) => {
            let isUnanswered = !question.answer || question.answer.choiceId === null;

            htmlContent += `
                <div class="card mb-4 border-0 shadow-sm">
                    <div class="card-body position-relative">
                        <div class="mb-3 row">
                            <div class="col-md-9">
                                <h5 class="fw-bold">Q${qIndex + 1}. ${question.questionText}</h5>
                            </div>
                            <div class="col-md-3 text-end">
                                ${isUnanswered ? `<div><span class="badge bg-warning mb-1">Unanswered</span></div>` : ""}
                                <div><span class="text-muted fst-italic">(Marks: ${question.marks ?? 0})</span></div>
                            </div>
                        </div>
                        <div class="row g-2">
            `;

            question.choices.forEach((choice, i) => {
                let choiceLabel = String.fromCharCode(65 + i); // A, B, C...
                let isUserAnswer = question.answer && question.answer.choiceId === choice.choiceId;
                let isCorrect = choice.isCorrect;

                let cssClass =
                    isUserAnswer && isCorrect ? "list-group-item-success" :
                    isUserAnswer && !isCorrect ? "list-group-item-danger" :
                    !isUserAnswer && isCorrect ? "list-group-item-primary" :
                    "list-group-item-light";

                let truncatedChoiceText = truncateText(choice.choiceText, 20);

                htmlContent += `
                    <div class="col-md-6">
                        <div class="list-group-item ${cssClass} d-flex justify-content-start align-items-center p-3 rounded">
                            <span class="fw-bold me-2">${choiceLabel}.</span>
                            <span class="flex-grow-1">${truncatedChoiceText}</span>
                `;

                if (isUserAnswer && isCorrect) {
                    htmlContent += `<span class="badge bg-success">✔</span>`;
                } else if (isUserAnswer && !isCorrect) {
                    htmlContent += `<span class="badge bg-danger">✘</span>`;
                } else if (!isUserAnswer && isCorrect) {
                    htmlContent += `<span class="badge bg-primary">✔</span>`;
                }

                htmlContent += `
                        </div>
                    </div>
                `;
            });

            htmlContent += `
                        </div>
                    </div>
                </div>
            `;
        });

        return htmlContent;
    }

    function truncateText(text, maxLength) {
        return text.length > maxLength ? text.substring(0, maxLength) + "..." : text;
    }

    function showResultPopup(contentHtml) {
        var resultPopup = $("#resultPopup").dxPopup({
            title: "Result",
            width: 700,
            height: "auto",
            visible: false,
            closeOnOutsideClick: true,
            showCloseButton: true,
            contentTemplate: function (contentElement) {
                contentElement.append(`
                    <div id="resultContentWrapper" style="max-height: 80vh; overflow-y: auto;">
                        <div id="resultContent"></div>
                    </div>
                `);
            }
        }).dxPopup("instance");

        resultPopup.show();
        $("#resultContent").html(contentHtml);
    }
</script>
